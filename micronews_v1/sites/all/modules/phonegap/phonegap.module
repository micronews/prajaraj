<?php
/**
 * PhoneGap Mobile Upload - Jon Anthony april 2011
 */
function phonegap_menu() {
  $items['phonegap/post'] = array(
        'title'            => 'op_post',
        'page callback'    => 'phonegap_op_post',
        'access arguments' => array('access content'),
        'type'             => MENU_CALLBACK
  );
  $items['phonegap/display_view'] = array(
        'title'            => 'display_view',
        'page callback'    => 'phonegap_display_view',
	'page arguments'   => array(2,3,4),
        'access arguments' => array('access content'),
        'type'             => MENU_CALLBACK
  );
  $items['phonegap/login'] = array(
        'title'            => 'my_posts',
        'page callback'    => 'phonegap_login',
        'access arguments' => array('access content'),
        'type'             => MENU_CALLBACK
  );
  $items['admin/config/services/phonegap'] = array(
        'title'            => 'Phonegap options',
        'description'      => 'Configure which content type is used to receive mobile posts',
        'page callback'    => 'drupal_get_form',
        'page arguments'   => array('phonegap_admin_settings'),
        'type'             => MENU_NORMAL_ITEM,
        'access arguments' => array('administer phonegap settings'),
        'file'             => 'phonegap.admin.inc'
  );
  return $items;
}


/**
 * Process posted article from mobile including credentials check 
 */
function phonegap_op_post() {

	 watchdog('phonegap', 'Called', $variables = array(), $severity = WATCHDOG_NOTICE, $link = NULL);
 

  $title = $_REQUEST['field_category'];
  //$body = $_REQUEST['body'];
  //$image = $_REQUEST['field_newsimage'];
  $geo = $_REQUEST['field_geo_location'];
  $cat  = $_REQUEST['field_category'];
  $long = $_REQUEST['longitude1'];
  $lat = $_REQUEST['latitude1'];
 
  $body = $cat.$body."Longitude:".$long." Latitude:".$lat;
  $result = phonegap_make_post($title ,$long,$lat);
 
  //print $title;
  //print $result;
  exit;
}

/**
 * Save node from posted mobile data and return node id 
 */
function phonegap_make_post($title, $long, $lat) {

  $e = entity_create('micronews', array(
    'type' => 'microupdate',
    'name'=>$title,
    'created'=> time(),
  ));

  $ew = entity_metadata_wrapper('micronews' ,$e);
   
  $ew->field_type->set($title);
  //$ew->field_constituency->set($constituency);

$fl = $ew->save();

$last_loc = db_query("SELECT lid FROM {location} ORDER BY lid DESC LIMIT 1");
        $last_loc = $last_loc->fetchObject();

        foreach ($last_loc as $last_count) {
          $value =  $last_count;
        }

$last_entity = db_query("SELECT entity_id FROM {field_data_field_location} ORDER BY entity_id DESC LIMIT 1");
        $last_entity = $last_entity->fetchObject();

        foreach ($last_entity as $last_count) {
          $last_entity_id =  $last_count;
        }

 db_insert('location')
    ->fields(array(
      'lid' => $value+1,
      'country' => 'in',
      'latitude' => $lat,
      'longitude' => $long,
    ))
    ->execute();

    db_insert('field_data_field_location')
    ->fields(array(
      'entity_type' => 'micronews',
      'bundle' => 'microupdate',
      'deleted' => '0',
      'entity_id' => $last_entity_id+1,
      'revision_id' => $last_entity_id+1,
      'language' => 'und',
    'delta' => '0',
    'field_location_lid' => $value+1,
    ))
    ->execute();

    db_insert('field_revision_field_location')
    ->fields(array(
      'entity_type' => 'micronews',
      'bundle' => 'microupdate',
      'deleted' => '0',
      'entity_id' => $last_entity_id+1,
      'revision_id' => $last_entity_id+1,
      'language' => 'und',
    'delta' => '0',
    'field_location_lid' => $value+1,
    ))
    ->execute();


if ($fl){
  return ("Your data has been saved to database");
}

else{

  return "Something went wrong";

}

}

/**
 * Return view requested by mobile device
 */
function phonegap_display_view($arg1, $arg2, $arg3) {
  
    $viewname = 'common'; //'$_REQUEST['view'];
    $display_id = 'page'; //$_REQUEST['display'];
    $view = views_get_view($viewname);
    $view->set_display($display_id);

    if(!($arg1) && !($arg2)){
     $args = array('all', 'all');
   }

    elseif(!($arg2)){
      $args = array($arg1, 'all');
    }

    elseif(($arg1) && ($arg2)) {
      $args = array($arg1, $arg2);
    }   
    
    $view->set_arguments($args);
    
    $view->set_items_per_page($arg3);
    $view->execute();
    print ($view->preview());

}

/**
 * Authenticate mobile user 
 */
function phonegap_login() {
  $status = "fail";
  $hash = "";
  $username = $_REQUEST['username'];
  $password = $_REQUEST['password'];
  if (($username != '') && ($password != '')) {
    $pwdst = user_authenticate($username, $password);
    $u = user_load_by_name($username);
  }
  if ($pwdst) {
    if (user_access('post articles from mobile', $u)) {
      $result = "username and password confirmed";
      $status = "ok";
      $hash = $u->pass;
    } else {
      $result = 'there was a problem with your credentials please check you have permission to create articles';
    }
  } else {
    $result = 'access denied please check your username and password ';
  }
    drupal_json_output(array(
    'result' => $result,
    'status' => $status,
    'hash' => $hash
    ));
  exit();
}

/**
 * Hook perm to define whether user can authenticate and upload content 
 */
function  phonegap_permission() {
  return array(
    'post articles from mobile' => array(
    'title' => t('Post articles from mobile'), 
    'description' => t('Post articles from the phonegap mobile app'),
    ),
    'administer phonegap settings' => array(
    'title' => t('Administer phonegap settings'), 
    'description' => t('Administer content type settings for the phonegap mobile app'),
    ),
  );
}
